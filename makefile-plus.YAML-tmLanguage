# [PackageDev] target_format: plist, ext: tmLanguage
---
name: Makefile Plus
scopeName: source.Makefile-Plus
fileTypes:
- mk
- Makefile
- makefile
- make
uuid: 30c797d2-0b7c-4348-be6b-1d08fbcc1e9b

patterns:
- include: '#mk_functions'
- include: '#mk_parenthesis'

- comment: Comments
  name: comment
  match: (?<!\\)\#.*$

- comment: Conditions
  name: keyword
  match: ^\s*(else\s+)?(ifeq|ifneq|ifdef|ifndef|if)

- comment: Conditions
  name: keyword
  match: ^\s*(else|endif)

- comment: Variable affectation
  begin: ^\s*([^?:+!$()#]+)\s*((\?|:|::|\+|!)?\=)
  captures:
    '1': {name: variable.parameter}
    '2': {name: keyword}
  patterns:
    - include: '#mk_variable'
    - include: '#mk_functions'
  end: '(?<!\\)\n'

- comment: Rule
  match: ^\ *[^\$\(\t\#]+?\s*:\s*
  name: entity.name.function

- comment: Target
  match: ^\ *(\$\()(.+?)(\)[^:\t ]*\s*:)\s*
  captures:
    '1': {name: entity.name.function}
    '2': {name: variable.parameter}
    '3': {name: entity.name.function}

- comment: Includes
  match: ^\s*\-?\s*include
  name: support.function

- comment: String
  name: string
  begin: '"'
  patterns:
    - include: '#mk_variable'
  end: '"'

- include: '#mk_variable'

repository:
  mk_variable:
    comment: Variable
    match: \$\(([^\):]+)(?:(:).*?(=).*?)?\)
    captures:
      '1': {name: variable.parameter}
      '2': {name: keyword}
      '3': {name: keyword}

  mk_parenthesis:
    name: mk_parenthesis
    begin: \(
    patterns:
      - include: '#mk_functions'
      - include: '#mk_variable'
      - include: '#mk_parenthesis'
    end: \)

  mk_functions:
    comment: Functions
    begin: (^\s*)?\$\((subst|patsubst|strip|findstring|filter|filter-out|sort|word|wordlist|words|firstword|lastword|dir|notdir|suffix|basename|addsuffix|addprefix|join|wildcard|realpath|abspath|if|or|and|foreach|file|call|value|eval|origin|flavor|error|warning|info|guile|shell)( )
    beginCaptures:
      '2': {name: support.function}
    patterns:
      - include: '#mk_parenthesis'
      - include: '#mk_functions'
      - include: '#mk_variable'
    end: \)

...